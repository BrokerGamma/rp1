<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--
    3.applicationContext-dao.xml
        1)加载外部数据库信息 db.properites
        2)数据源的配置 druid
        3)SqlSessionFactoryBean  (加载dataSource , 加载SqlMapConfig.xml ,起别名)
        4)Mapper包扫描
    -->

    <!-- 1)加载外部数据库信息 db.properites-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--2)数据源的配置 druid-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--3)SqlSessionFactoryBean  (加载dataSource , 加载SqlMapConfig.xml ,起别名)-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <property name="typeAliasesPackage" value="com.itheima.pojo"/>
    </bean>

    <!--4)Mapper包扫描
        该扫描器扫描mapper包(包中有AccountMapper接口, AccountMapper.xml);
        1.根据JDK的动态代理创建AcccountMapper接口的子类代理对象,放到spring容器中;
        2.加载AccountMapper.xml 文件
    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.itheima.mapper"/>
    </bean>
</beans>